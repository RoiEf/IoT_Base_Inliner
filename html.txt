#ifndef __htmls1212123___
#define __htmls1212123___

#include <Arduino.h>

const char id[6][10] PROGMEM = {"DEST_ROOT", "DEST_FEAT", "DEST_NET", "DEST_AP", "DEST_STA", "DEST_OTA"};
const char url[6][10] PROGMEM = {"/", "/ModFeat", "/GenNet", "/AP", "/STA", "/OTA"};
const char headder[6][30] PROGMEM = {"Home", "Featurs Selection", "General Network Settings", "AP Settings", "STA Settings", "Over the Air Updates"};

const char htmlHead[] PROGMEM = R"=====(<!DOCTYPE html>
<html>
    <head>
        <title>The Swamp RODI</title>
        <style>
        td {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }
        </style>
    </head>
    <body>
        <table>
            <tr><td><h1>The Swamp RODI</h1></td>
                <td></h2>RODI</h2></td>
            </tr><tr><td colspan="2">
                <h2>headderheadder</h2>
            </td></tr>
)=====";
const char htmlFoot[] PROGMEM = R"=====(
            <tr><td colspan="2">
                Based on the "IoT Boilerplate" By Roi Efrati
            </td></tr>
        </table>
    </body>
</html>
)=====";
//////~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
const char linksList[] PROGMEM = R"=====(
<td>
<div>
    <a href="#" onClick="document.getElementById('DEST_ROOT').submit();">Home</a><br />
    <a href="#" onClick="document.getElementById('DEST_FEAT').submit();">System Featurs Selection</a><br />
    <a href="#" onClick="document.getElementById('DEST_NET').submit();">General Network settings</a><br />
    <a href="#" onClick="document.getElementById('DEST_AP').submit();">AP Communications settings</a><br />
    <a href="#" onClick="document.getElementById('DEST_STA').submit();">STA Communications settings</a><br />
    <a href="#" onClick="document.getElementById('DEST_OTA').submit();">OTA Firmware Update</a><br />
</div>
</td>
)=====";
const char loginForm[] PROGMEM = R"=====(
<div>
    <form action="XxXXxxXXXxxx" method="POST">
        <input type="password" name="pass" tabindex="0" autocomplete="off"/>
        <input type="submit" tabindex="1" />
    </form>
</div>
)=====";

const char linkForm[] PROGMEM = R"=====(<form id="IdIIddIIIddd" action="XxXXxxXXXxxx" method="POST"></form>)=====";
const char linkFormPass[] PROGMEM = R"=====(<form id="IdIIddIIIddd" action="XxXXxxXXXxxx" method="POST"><input type="hidden" name="pass" value="PpPPppPPPppp"/></form>)=====";

const char passOK[] PROGMEM = R"=====(<tr><td colspan="2"><h3>Password OK</h3></td></tr>)=====";
const char badPassword[] PROGMEM = R"=====(<tr><td colspan="2"><h1>Wrong Password!!!</h1></td></tr>)=====";
const char mustLogin[] PROGMEM = R"=====(<tr><td colspan="2"><h1>you must log in to view this page!!!</h1></td></tr>)=====";
//////~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
const char apForm[] PROGMEM = R"=====(
<div><form id="AP_MAIN_FORM" action="/AP" method="POST">
    <input type="hidden" name="pass" value="PpPPppPPPppp" />
    <input type="hidden" name="action" value="save" />
    <ul>
        <li>Local IP: <input type="number" name="ip1" tabindex="1" min="0" max="255" value="v1vv11vvv111" />|
        <input type="number" name="ip2" tabindex="2" min="0" max="255" value="v2vv22vvv222" />|
        <input type="number" name="ip3" tabindex="3" min="0" max="255" value="v3vv33vvv333" />|
        <input type="number" name="ip4" tabindex="4" min="1" max="255" value="v4vv44vvv444" /></li>
        <li>Subnet Mask: <input type="number" name="sub1" tabindex="5" min="0" max="255" value="s1ss11sss111" />|
        <input type="number" name="sub2" tabindex="6" min="0" max="255" value="s2ss22sss222" />|
        <input type="number" name="sub3" tabindex="7" min="0" max="255" value="s3ss33sss333" />|
        <input type="number" name="sub4" tabindex="8" min="0" max="255" value="s4ss44sss444" /></li>
        <li>AP SSID<input type="text" name="AP_SSID" tabindex="9" value="APapSSID" /></li>
        <li>AP Password<input type="text" name="AP_PASSWORD" tabindex="10" value="APapPASSWORD" /></li>
        <li>Local Hostname<input type="text" name="AP_HOST" tabindex="11" value="APapHOSTNAME" /></li>
    </ul>
    <input type="submit" value="SAVE" />
</form></div>
)=====";

const char featForm[] PROGMEM = R"=====(
<div>
    <form id="features_MAIN_FORM" action="/ModFeat" method="POST">
        <input type="hidden" name="pass" value="PpPPppPPPppp" />
        <input type="hidden" name="action" value="save" />
        <ul>
            <li>Input Flow:    <input type="checkbox" name="flow" tabindex="1" value="1" checked1 /></li>
            <li>Temp:   <input type="checkbox" name="temp" tabindex="2" value="1" checked2 /></li>
            <li>Input TDS:    <input type="checkbox" name="inputTDS" tabindex="3" value="1" checked3 /></li>
            <li>Carbon TDS:   <input type="checkbox" name="carbonTDS" tabindex="4" value="1" checked4 /></li>
            <li>RO TDS:    <input type="checkbox" name="roTDS" tabindex="5" value="1" checked5 /></li>
            <li>DI TDS:   <input type="checkbox" name="diTDS" tabindex="6" value="1" checked6 /></li>
        </ul>
        <br />
        <ul>
            <li>Tank MAX:    <input type="checkbox" name="t_max" tabindex="8" value="1" checked7 /></li>
            <li>Tank Min:   <input type="checkbox" name="t_min" tabindex="9" value="1" checked8/></li>
        </ul>
        <br />
        <ul>
            <li>Clean Membrane:    <input type="checkbox" name="clean" tabindex="11" value="1" Checked9 /></li>
            <li>Purge system:   <input type="checkbox" name="purge" tabindex="12" value="1" Checked10 /></li>
            <li>Fill Tank:   <input type="checkbox" name="fill" tabindex="13" value="1" Checked11 /></li>
        </ul>
        <input type="submit" value="SAVE" tabindex="14" />
    </form>
</div>
)=====";

const char netForm[] PROGMEM = R"=====(
<div><form id="GenNet_MAIN_FORM" action="/GenNet" method="POST">
    <input type="hidden" name="pass" value="PpPPppPPPppp" />
    <input type="hidden" name="action" value="save" />
    <ul>
        <li>AP MODE:    <input type="radio" name="w_mode" tabindex="1" value="1" checked1 /></li>
        <li>STA MODE:   <input type="radio" name="w_mode" tabindex="2" value="2" checked2 /></li>
    </ul>
    <ul>
        <li>Run API:    <input type="checkbox" name="runAPI" tabindex="3" value="1" checked3 /></li>
        <li>Run Sender:    <input type="checkbox" name="runSender" tabindex="4" value="1" checked4 /></li>
    </ul>
    <input type="submit" value="SAVE"  tabindex="5" />
</form></div>
)=====";

const char staForm[] PROGMEM = R"=====(
<div>
    <div>
        <h3>avelable networks:</h3>
        <ul>
            AvaVNetsnetS
        </ul>
    </div>
    <form id="STA_MAIN_FORM" action="/STA" method="POST">
        <input type="hidden" name="pass" value="PpPPppPPPppp" />
        <input type="hidden" name="action" value="save" />
        <ul>
            <li>Network SSID<input type="text" name="STA_SSID" id="STA_SSID" tabindex="1" value="STAstaSSID" /></li>
            <li>Nwtwork Password<input type="text" name="STA_PASSWORD" tabindex="2" value="STAstaPASSWORD" /></li>
            <li>Bind IP to static: <input type="checkbox" name="bindIPStatic" tabindex="3" value="1" checked2 /></li>
        </ul>
        <br />
        <ul>
            <li>Use Static IP<input type="checkbox" name="STA_STATIC" tabindex="4" value="1" checked1 /></li>
            <li>Local IP: <input type="number" name="ip1" tabindex="5" min="0" max="255" value="v1vv11vvv111" />|
            <input type="number" name="ip2" tabindex="6" min="0" max="255" value="v2vv22vvv222" />|
            <input type="number" name="ip3" tabindex="7" min="0" max="255" value="v3vv33vvv333" />|
            <input type="number" name="ip4" tabindex="8" min="1" max="255" value="v4vv44vvv444" /></li>
            <li>Default Gateway: <input type="number" name="ip5" tabindex="9" min="0" max="255" value="v5vv55vvv555" />|
            <input type="number" name="ip6" tabindex="10" min="0" max="255" value="v6vv66vvv666" />|
            <input type="number" name="ip7" tabindex="11" min="0" max="255" value="v7vv77vvv777" />|
            <input type="number" name="ip8" tabindex="12" min="1" max="255" value="v8vv88vvv888" /></li>
            <li>Subnet Mask: <input type="number" name="sub1" tabindex="13" min="0" max="255" value="s1ss11sss111" />|
            <input type="number" name="sub2" tabindex="14" min="0" max="255" value="s2ss22sss222" />|
            <input type="number" name="sub3" tabindex="15" min="0" max="255" value="s3ss33sss333" />|
            <input type="number" name="sub4" tabindex="16" min="0" max="255" value="s4ss44sss444" /></li>
        </ul>
        <br />
        <ul>
            <li>Local Hostname<input type="text" name="STA_HOST" tabindex="18" value="STAstaHOSTNAME" />.local</li>
        </ul>
        <input type="submit" value="SAVE" tabindex="19" />
    </form>
</div>
)=====";

const char otaForm[] PROGMEM = R"=====(
<div><form id="OTA_Update_FORM" action="/doOTA" method="POST" enctype='multipart/form-data'>
    <input type="hidden" name="pass" value="PpPPppPPPppp" />
    <input type="hidden" name="action" value="save" />
    <ul>
        <li>Firmware location:    <input type='file' name='file' id='file' tabindex="1" /></li>
    </ul>
    <input type="submit" value="UPDATE"  tabindex="2" />
</form></div>
)=====";

#endif